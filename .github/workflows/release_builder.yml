# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - name: Godot Export
        uses: firebelley/godot-export@v5.2.1
        with:
          # The download url of the Linux Headless Godot executable.
          godot_executable_download_url: https://downloads.tuxfamily.org/godotengine/4.2.2/Godot_v4.2.2-stable_linux.x86_64.zip
          # The url of the export templates corresponding to the Godot executable version
          godot_export_templates_download_url: https://downloads.tuxfamily.org/godotengine/4.2.2/Godot_v4.2.2-stable_export_templates.tpz
          relative_project_path: ./
          archive_output: true
          cache: true
      # This release action has worked well for me. However, you can most likely use any release action of your choosing.
      # https://github.com/ncipollo/release-action
      - name: List directory contents
        run: ls -R
      - name: create release
        uses: ncipollo/release-action@v1.12.0
        with:
            token: ${{ secrets.GITHUB_TOKEN }}
            generateReleaseNotes: true
            tag: ${{ github.ref_name }}
            artifacts: ${{ steps.export.outputs.archive_directory }}/*
